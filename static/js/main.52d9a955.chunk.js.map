{"version":3,"sources":["components/Header/Header.js","components/Home/Home.js","components/Lists/Lists.js","components/Meals/AddMeal.js","components/Meals/ViewMeals.js","components/Plans/Plans.js","components/Meals/MealsManager.js","components/Navigation/Navigation.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","className","href","src","alt","width","height","Home","useState","userLoggedIn","type","placeholder","Lists","shoppingList","finalList","Object","values","reduce","acc","quantity","r","key","JSON","stringify","parseInt","console","log","map","ingredient","i","AddMeal","onAdd","name","setName","ingredients","setIngredients","recipe","setRecipe","link","setLink","onSubmit","e","preventDefault","newMeal","fetch","method","body","headers","then","resp","json","data","value","onChange","target","index","copyIngredients","saveIngredientName","saveIngredientQuantity","onClick","ViewMeals","Plans","onDone","allMeals","setAllMeals","monday","breakfast","lunch","snack","dinner","tuesday","wednesday","thursday","friday","saturday","sunday","plan","setPlan","useEffect","response","catch","error","oldPlan","forEach","meal","element","ingredientsArray","day","MealsManager","meals","setMeals","Navigation","exact","to","App","selectedIngredients","setSelectedIngredients","historyLists","sethistoryLists","handleSaveToHistory","list","newHistory","path","component","history","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.52d9a955.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h1 className=\"App-header\">\r\n            <span>\r\n                <a href=\"/\">Planini</a>\r\n                <img src=\"plant-1.png\" alt=\"Leaf logo\" width=\"50\" height=\"50\"></img>\r\n            </span>\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport \"./Home.scss\";\r\n\r\nconst Home = () => {\r\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n\r\n  if (userLoggedIn == true) {\r\n    //true pokazuje guziki, false pokazuje formularz logowania\r\n    return (\r\n      <div className=\"login-style\">\r\n        <h2>Witaj w Planini!</h2>\r\n        <h3>Zaloguj się, aby móc korzystać z aplikacji</h3>\r\n        <label>\r\n          E-mail:\r\n          <input type=\"text\" placeholder=\"E-mail\"></input>\r\n        </label>\r\n        <label>\r\n          Hasło:\r\n          <input type=\"password\" placeholder=\"Hasło\"></input>\r\n        </label>\r\n        <button className=\"btn-small\">Zaloguj</button>{\" \"}\r\n        {/* docelowo tu bedzie onClick zbierajacy dane logowania */}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"home-style\">\r\n        {/* <button className=\"btn-big\"><a href=\"\">Inspiracje</a></button> */}\r\n        <button className=\"btn-big\">\r\n          <a href=\"http://localhost:8000/#/meals\">Dodaj posiłek</a>\r\n        </button>\r\n        <button className=\"btn-big\">\r\n          <a href=\"http://localhost:8000/#/plans\">Zaplanuj tydzień</a>\r\n        </button>\r\n        <button className=\"btn-big\">\r\n          <a href=\"http://localhost:8000/#/lists\">Lista zakupów</a>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./Lists.scss\";\r\n\r\nfunction Lists({ shoppingList }) {\r\n  // console.log(shoppingList);\r\n\r\n  const finalList = Object.values(shoppingList.reduce((acc, {quantity, ...r}) => {\r\n    const key = JSON.stringify(r); //key to moj ingredient\r\n    acc[key] = (acc[key]  || {...r, quantity: 0});\r\n    return (acc[key].quantity += parseInt(quantity), acc);\r\n  }, {}));\r\n  console.log(finalList);\r\n  \r\n  return (\r\n    <div className=\"shopping-list\">\r\n      <h1>Lista zakupów:</h1>\r\n      {finalList.map((ingredient, i) => {\r\n        return (\r\n          <div key={i}>\r\n            {ingredient.ingredient}: {ingredient.quantity} gr\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lists;\r\n","import React, { useState } from \"react\";\r\nimport \"./AddMeal.scss\";\r\n\r\nconst AddMeal = ({ onAdd }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState([\r\n    { ingredient: \"\", quantity: \"\" },\r\n    { ingredient: \"\", quantity: \"\" },\r\n    { ingredient: \"\", quantity: \"\" },\r\n    { ingredient: \"\", quantity: \"\" },\r\n    { ingredient: \"\", quantity: \"\" },\r\n  ]);\r\n  const [recipe, setRecipe] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newMeal = { \r\n      name: name,\r\n      ingredients: ingredients,\r\n      recipe: recipe,\r\n      link: link,\r\n    };\r\n\r\n    console.log(newMeal);\r\n\r\n    fetch(\"http://localhost:3011/meals\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newMeal),\r\n      headers: {\r\n        \"content-type\": \"Application/JSON\",\r\n      },\r\n    })\r\n      .then((resp) => {\r\n        return resp.json();\r\n      })\r\n      .then((data) => {\r\n        onAdd(data);\r\n      });\r\n  };\r\n\r\n  const saveIngredientName = (index, name) => {\r\n    const copyIngredients = [...ingredients];\r\n    copyIngredients[index].ingredient = name;\r\n    setIngredients(copyIngredients);\r\n  };\r\n\r\n  const saveIngredientQuantity = (index, quantity) => {\r\n    const copyIngredients = [...ingredients];\r\n    copyIngredients[index].quantity = quantity;\r\n    setIngredients(copyIngredients);\r\n  };\r\n\r\n  // const AddIngredientField = (ingredientName, ingredientQuantity) => {\r\n  //   //   e.preventDefault(); jak to dopisuje to mi wywala bledy, cos tu nie gra\r\n  //   const newIngredient = {\r\n  //     ingredient: ingredientName,\r\n  //     quantity: ingredientQuantity,\r\n  //   };\r\n  //   setIngredients([\r\n  //     ...ingredients,\r\n  //     newIngredient,\r\n  //   ]); /* dodaje mi nowe pole, ale nie ma ono takiej funkcjonalnosci co poprzednie input fields, po zapisie dodaje Class zamiast obiektu - czemu? */\r\n  // };\r\n\r\n  const AddIngredientField = () => {\r\n    setIngredients([...ingredients, {ingredient:\"\", quantity:\"\"}]);\r\n    console.log(ingredients);\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddMeal\">\r\n      <form className=\"Header\" onSubmit={handleSubmit}>\r\n        <h2>Dodawanie przepisu</h2>\r\n        <label>\r\n          <input\r\n            className=\"Form-Width\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Nazwa przepisu\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </label>\r\n        <div className=\"ingredients-list\">\r\n          {ingredients.map((ingredient, index) => {\r\n            return (\r\n              <>\r\n                <p key={index}>\r\n                  <input\r\n                    className=\"Ingredient\"\r\n                    type=\"text\"\r\n                    name=\"ingredient\"\r\n                    placeholder=\"Składnik\"\r\n                    value={ingredient.name}\r\n                    onChange={(e) => saveIngredientName(index, e.target.value)}\r\n                  />\r\n                  <input\r\n                    className=\"Quantity\"\r\n                    type=\"text\"\r\n                    name=\"quantity\"\r\n                    placeholder=\"Ilość\"\r\n                    value={ingredient.quantity}\r\n                    onChange={(e) =>\r\n                      saveIngredientQuantity(index, e.target.value)\r\n                    }\r\n                  />\r\n                  gr\r\n                </p>\r\n              </>\r\n            );\r\n          })}\r\n          <button\r\n            className=\"btn-small btn-plus\"\r\n            onClick={(e) =>\r\n              // AddIngredientField(ingredient.name, ingredient.quantity) =>to bylo dobrze wewnatrz mapa\r\n\r\n              AddIngredientField()\r\n            }\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n\r\n        <textarea\r\n          className=\"Form-Width\"\r\n          type=\"text\"\r\n          placeholder=\"Treść przepisu\"\r\n          value={recipe}\r\n          onChange={(e) => setRecipe(e.target.value)}\r\n        />\r\n        <input\r\n          className=\"Form-Width\"\r\n          type=\"text\"\r\n          placeholder=\"Link\"\r\n          value={link}\r\n          onChange={(e) => setLink(e.target.value)}\r\n        />\r\n        {/* <span> */}\r\n        {/* <button className=\"btn-small\">Anuluj</button> */}\r\n        {/* <button className=\"btn-small\">Zapisz i zamknij</button> */}\r\n        {/* </span> */}\r\n        <input type=\"submit\" className=\"btn-small\" value=\"Zapisz\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMeal;\r\n","import React, { useState } from \"react\";\r\nimport \"./ViewMeals.scss\";\r\n\r\nconst ViewMeals = () => {\r\n  return (\r\n    <>\r\n      <div className=\"ViewMeals\">\r\n        Tu kiedyś będą wyswietalne posiłki (z serwera)\r\n        {/* {meal.map((element, i) => (\r\n          <div key={i} className=\"meal-tile\" onHover={ShowRecipe}>\r\n            <h3>{element.name}</h3>\r\n            <p>{element.recipe}</p>\r\n            <p>{element.link}</p>\r\n          </div>\r\n        ))} */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewMeals;\r\n","import React, { useState, useEffect, useHistory } from \"react\";\r\nimport \"./Plans.scss\";\r\n\r\nconst Plans = ({onDone}) => {\r\n  const [allMeals, setAllMeals] = useState(null); //na potrzeby JSON serwera\r\n  const [plan, setPlan] = useState({\r\n    monday: {\r\n      breakfast: \"\",\r\n      lunch: \"\",\r\n      snack: \"\",\r\n      dinner: \"\",\r\n    },\r\n    tuesday: {\r\n      breakfast: \"\",\r\n      lunch: \"\",\r\n      snack: \"\",\r\n      dinner: \"\",\r\n    },\r\n    wednesday: {\r\n      breakfast: \"\",\r\n      lunch: \"\",\r\n      snack: \"\",\r\n      dinner: \"\",\r\n    },\r\n    thursday: {\r\n      breakfast: \"\",\r\n      lunch: \"\",\r\n      snack: \"\",\r\n      dinner: \"\",\r\n    },\r\n    friday: {\r\n      breakfast: \"\",\r\n      lunch: \"\",\r\n      snack: \"\",\r\n      dinner: \"\",\r\n    },\r\n    saturday: {\r\n      breakfast: \"\",\r\n      lunch: \"\",\r\n      snack: \"\",\r\n      dinner: \"\",\r\n    },\r\n    sunday: {\r\n      breakfast: \"\",\r\n      lunch: \"\",\r\n      snack: \"\",\r\n      dinner: \"\",\r\n    },\r\n  });\r\n\r\n  const fetchAllMeals = () => {\r\n    fetch(\"http://localhost:8000/meals\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setAllMeals(data);\r\n        // console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    /* to jest odpowiednik ComponentDidMount w zapisie klasowym */\r\n    fetchAllMeals();\r\n  }, []); /*jeśli to usune, to jest infinite loop*/\r\n\r\n  //mozna to wywalic - obrazuje, jaka jest kolejnosc sciagania danych z JSON'a\r\n  // let counter = 0;\r\n  // counter++;\r\n  // console.log(counter);\r\n  // console.log(allMeals != null ? allMeals : \"brak danych\");\r\n  // console.log(allMeals);\r\n\r\n  if (allMeals != null) {\r\n\r\n    const handleList = (e) => {\r\n      e.preventDefault();\r\n      let ingredientsArray = [];\r\n      for (const day in plan) {\r\n        ingredientsArray = [\r\n          ...ingredientsArray,\r\n          ...plan[day][\"breakfast\"],\r\n          ...plan[day][\"lunch\"],\r\n          ...plan[day][\"snack\"],\r\n          ...plan[day][\"dinner\"],\r\n        ];\r\n\r\n      }\r\n      \r\n      // handleRedirect();\r\n\r\n      console.log(ingredientsArray);\r\n      onDone(ingredientsArray);\r\n      \r\n    };\r\n    \r\n    // const handleRedirect = () => {\r\n    //   console.log(\"czy działa?\")\r\n    //   // useHistory().push(\"/lists\");\r\n    //   window.location.href = \"/lists\";\r\n    // }\r\n\r\n    ///////////// tu ogarniam śniadania z calego tygodnia ///////////////\r\n\r\n    const handleMondayBreakfastChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.monday.breakfast = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleTuesdayBreakfastChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.tuesday.breakfast = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleWednesdayBreakfastChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.wednesday.breakfast = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleThursdayBreakfastChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.thursday.breakfast = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleFridayBreakfastChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.friday.breakfast = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleSaturdayBreakfastChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.saturday.breakfast = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleSundayBreakfastChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.sunday.breakfast = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    ///////////// tu ogarniam obiady z calego tygodnia ///////////////\r\n\r\n    const handleMondayLunchChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.monday.lunch = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleTuesdayLunchChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.tuesday.lunch = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleWednesdayLunchChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.wednesday.lunch = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleThursdayLunchChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.thursday.lunch = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleFridayLunchChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.friday.lunch = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleSaturdayLunchChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.saturday.lunch = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleSundayLunchChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.sunday.lunch = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    ///////////// tu ogarniam przekąski z calego tygodnia ///////////////\r\n\r\n    const handleMondaySnackChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.monday.snack = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleTuesdaySnackChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.tuesday.snack = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleWednesdaySnackChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.wednesday.snack = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleThursdaySnackChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.thursday.snack = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleFridaySnackChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.friday.snack = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleSaturdaySnackChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.saturday.snack = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleSundaySnackChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.sunday.snack = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    ///////////// tu ogarniam kolacje z calego tygodnia ///////////////\r\n\r\n    const handleMondayDinnerChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.monday.dinner = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleTuesdayDinnerChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.tuesday.dinner = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleWednesdayDinnerChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.wednesday.dinner = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleThursdayDinnerChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.thursday.dinner = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleFridayDinnerChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.friday.dinner = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleSaturdayDinnerChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.saturday.dinner = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    const handleSundayDinnerChange = (e) => {\r\n      const oldPlan = { ...plan };\r\n      allMeals.forEach((meal) => {\r\n        if (meal.name === e.target.value) {\r\n          oldPlan.sunday.dinner = [...meal.ingredients];\r\n        }\r\n      });\r\n      setPlan(oldPlan);\r\n    };\r\n\r\n    // to chcialam wrzucic do srodka kazdego selecta, ale nie dzialalo, wiec wrzucilam calosc zamiast zmiennej\r\n    // let mealsList = allMeals.map((element, i) => {\r\n    //  return <option key={i}>{element.name}</option>;\r\n    // });\r\n\r\n    return (\r\n      <div className=\"weekly-plan\">\r\n        <table>\r\n          <thead className=\"table-header\">\r\n            <tr className=\"week-days\">\r\n              <th></th>\r\n              <th>Poniedziałek</th>\r\n              <th>Wtorek</th>\r\n              <th>Środa</th>\r\n              <th>Czwartek</th>\r\n              <th>Piątek</th>\r\n              <th>Sobota</th>\r\n              <th>Niedziela</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            <tr className=\"breakfast-row\">\r\n              <td>Śniadanie</td>\r\n              <td>\r\n                <select onChange={handleMondayBreakfastChange}>\r\n                  <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleTuesdayBreakfastChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleWednesdayBreakfastChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleThursdayBreakfastChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleFridayBreakfastChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleSaturdayBreakfastChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleSundayBreakfastChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr className=\"lunch-row\">\r\n              <td>Obiad</td>\r\n              <td>\r\n                <select onChange={handleMondayLunchChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleTuesdayLunchChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleWednesdayLunchChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleThursdayLunchChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleFridayLunchChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleSaturdayLunchChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleSundayLunchChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr className=\"snack-row\">\r\n              <td>Przekąska</td>\r\n              <td>\r\n                <select onChange={handleMondaySnackChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleTuesdaySnackChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleWednesdaySnackChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleThursdaySnackChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleFridaySnackChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleSaturdaySnackChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleSundaySnackChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr className=\"dinner-row\">\r\n              <td>Kolacja</td>\r\n              <td>\r\n                <select onChange={handleMondayDinnerChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleTuesdayDinnerChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleWednesdayDinnerChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleThursdayDinnerChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleFridayDinnerChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleSaturdayDinnerChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select onChange={handleSundayDinnerChange}>\r\n                <option></option>\r\n                  {allMeals.map((element, i) => {\r\n                    return <option key={i}>{element.name}</option>;\r\n                  })}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <button className=\"btn-small\" onClick={handleList}>\r\n          Lista zakupów\r\n        </button>\r\n\r\n        {/* <Link to=\"/lists\" className=\"btn-small\" onClick={handleList}>\r\n          Lista zakupów\r\n        </Link> */}\r\n\r\n      </div>\r\n    );\r\n  } else {\r\n    return <p>Ładuję dane..............</p>;\r\n  }\r\n};\r\n\r\nexport default Plans;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AddMeal from \"./AddMeal.js\";\r\nimport ViewMeals from \"./ViewMeals\";\r\nimport Plans from \"./../Plans/Plans\";\r\n// import test from \"./../Plans/test\";\r\nimport \"./MealsManager.scss\";\r\n\r\nconst MealsManager = () => {\r\n  const [meals, setMeals] = useState([]);\r\n\r\n  const handleAdd = (meal) => {\r\n    setMeals([...meals, meal]);\r\n  };\r\n\r\n  const getDataFromApi = () => {\r\n    fetch(\"http://localhost:3011/meals\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setMeals(data);\r\n        console.log(\"JSON hula\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataFromApi();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"MealsComponent\">\r\n        <AddMeal onAdd={handleAdd} />\r\n        <ViewMeals />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MealsManager;\r\n","import React from 'react';\r\nimport './Navigation.scss';\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Navigation() {\r\n    return (\r\n    <div className=\"Nav-style\">\r\n        <ul>\r\n            <li><NavLink exact to=\"/\">Start</NavLink></li>\r\n            <li><NavLink to=\"/meals\">Posiłki</NavLink></li>\r\n            <li><NavLink to=\"/plans\">Plany posiłków</NavLink></li>\r\n            <li><NavLink to=\"/lists\">Listy zakupów</NavLink></li>\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Header from \"../Header/Header.js\";\nimport Home from \"../Home/Home.js\";\nimport Lists from \"../Lists/Lists.js\";\nimport MealsManager from \"../Meals/MealsManager.js\";\nimport Navigation from \"../Navigation/Navigation.js\";\nimport Plans from \"../Plans/Plans.js\";\n\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  const [selectedIngredients, setSelectedIngredients] = useState([]);\n  const [historyLists, sethistoryLists] = useState([]);\n  const handleSaveToHistory = (list) => {\n    const newHistory = [...historyLists, [...list]];\n    sethistoryLists(newHistory);\n    setSelectedIngredients(list);\n  };\n\n  return (\n    <div>\n      <Router>\n        <Header />\n        <section className=\"Section-style\">\n          <Navigation />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/meals\" component={MealsManager} />\n            <Route\n              path=\"/plans\"\n              component={() => <Plans onDone={handleSaveToHistory} />}\n            />\n            <Route\n              path=\"/lists\"\n              component={() => (\n                <Lists\n                  history={historyLists}\n                  shoppingList={selectedIngredients}\n                />\n              )}\n            />\n          </Switch>\n        </section>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}